import { Resolver, Query, Mutation, Args } from '@nestjs/graphql';
import { {{className}}Service } from './{{pathName}}.service';
import { {{className}}Model } from './models/{{pathName}}.model';
import { {{className}}Input } from './inputs/{{pathName}}.input';
import { INPUT_KEY } from 'src/common/common.constraints';
import { Public } from 'src/common/decorators/public.decorator';

@Resolver()
export class {{className}}Resolver {
  constructor(private readonly {{variableName}}Service: {{className}}Service) {}

  @Public()
  @Query(() => {{className}}Model, { name: '{{variableName}}s' })
  async get{{className}}(@Args(INPUT_KEY) input: {{className}}Input) {
    return this.{{variableName}}Service.findById(input.id);
  }

  @Public()
  @Mutation(() => {{className}}Model, { name: '{{variableName}}' })
  async create{{className}}(@Args(INPUT_KEY) input: {{className}}Input) {
    return this.{{variableName}}Service.create(input);
  }
}
